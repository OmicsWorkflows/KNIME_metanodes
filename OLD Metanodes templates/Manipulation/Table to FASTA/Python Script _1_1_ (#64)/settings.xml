<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="sourceCode" type="xstring" value="import textwrap%%00010import os.path%%00010%%00010# gets absolute path to the file from the target folder and the filename%%00010absolute_path_to_file = os.path.join(flow_variables['file_path'], flow_variables['fasta_file_name'])%%00010%%00010fasta_text = &quot;&quot;%%00010%%00010# resets the already present file if it is the case%%00010open(absolute_path_to_file, 'w')%%00010%%00010%%00010# iterates through the provided table rows and wraps seqeunce to a multiline string and combines it with the header in the next step%%00010with open(absolute_path_to_file, 'a') as file:%%00010%%00009for index, row in input_table.iterrows():%%00010%%00009%%00009fasta_text = &quot;&quot;%%00010%%00009%%00009sequence_multiline = &quot;&quot;%%00010%%00009%%00009sequence_multiline = textwrap.fill(row[flow_variables['sequence_column']], width=60)%%00010%%00009%%00009fasta_text += &quot;&gt;&quot; + row[flow_variables['header_column']] + &quot;\n&quot; + sequence_multiline + &quot;\n&quot;%%00010%%00009%%00009file.write(fasta_text)%%00010%%00010# opens the specified file (or creates a new one in case it does not exist) and writes the fasta text into it%%00010# the file is overwritten!%%00010#f = open(absolute_path_to_file, &quot;w&quot;)%%00010#f.write(fasta_text)%%00010#f.close()%%00010%%00010# outputs also the path to the created fasta file for further use in the workflow%%00010import pandas%%00010output_table = pandas.DataFrame({&quot;path&quot;: [absolute_path_to_file]})%%00010"/>
<entry key="rowLimit" type="xint" value="1000"/>
<entry key="pythonVersionOption" type="xstring" value="PYTHON3"/>
<entry key="convertMissingToPython" type="xboolean" value="false"/>
<entry key="convertMissingFromPython" type="xboolean" value="false"/>
<entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
<entry key="sentinelValue" type="xint" value="0"/>
<entry key="chunkSize" type="xint" value="500000"/>
<entry key="python2Command" type="xstring" value=""/>
<entry key="python3Command" type="xstring" value=""/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="CONFIGURED"/>
<entry key="factory" type="xstring" value="org.knime.python2.nodes.script.Python2ScriptNodeFactory"/>
<entry key="node-name" type="xstring" value="Python Script (1⇒1)"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="3.7.2.v201904170931"/>
<entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="3.7.2.v201904170931"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Python Script (1⇒1)"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
