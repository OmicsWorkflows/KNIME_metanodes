<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="sourceCode" type="xstring" value="# initiate list to contain all errors%%00010errors = []%%00010%%00010# create lists of designs and subsets%%00010if flow_variables['subset_bool'] == 1:%%00010%%00009samples = [x.strip() for x in flow_variables['design'].split(',')]%%00010%%00009samples_set = set(samples)%%00010%%00010%%00009subsets = [x.strip() for x in flow_variables['subset_list'].split(',')]%%00010%%00009subsets = [x.strip() for y in subsets for x in y.split('+')]%%00010%%00009subsets = set(subsets)%%00010%%00010%%00009selected_samples = [x.strip() for x in flow_variables['column_selection'].split(',')]%%00010%%00010# raise error if no method is selected%%00010if flow_variables['methods'].strip() == '':%%00010%%00009errors.append('No data sets to compare were selected')%%00010%%00009%%00010# raise error if no experimental design is provided and subsets are to be created%%00010if flow_variables['subset_bool'] == 1 and flow_variables['design'].strip() == '':%%00010%%00009errors.append('Experimental design needs to be provided for subset determination')%%00010%%00010# raise error if number of selected samples doesn't match experimental design%%00010if flow_variables['subset_bool'] == 1 and len(selected_samples) != len(samples):%%00010%%00009errors.append('Experimental design does not match number of samples')%%00010%%00010# raise error if no subsets are provided%%00010if flow_variables['subset_bool'] == 1 and flow_variables['subset_list'].strip() == '':%%00010%%00009errors.append('Subsets checked, but no subset descriptions were provided')%%00010%%00010# raise error if subsets contain unknown samples%%00010if flow_variables['subset_bool'] == 1 and not subsets.issubset(samples_set):%%00010%%00009errors.append('Subsets description contains samples not present in the experimental design')%%00010%%00010# raise error if no graph is selected%%00010if flow_variables['graphs'].strip() == '' and flow_variables['subset_bool'] == 0:%%00010%%00009errors.append('No graphs to create were selected')%%00010%%00010if flow_variables['subset_graphs'].strip() == '' and flow_variables['subset_bool'] == 1:%%00010%%00009errors.append('Subsets checked, but no subset graphs to create were selected')%%00010%%00010# return all errors%%00010if errors != []:%%00010%%00009flow_variables['err_bool'] = 1%%00010%%00009flow_variables['errors'] = '\n'.join(errors)%%00010else:%%00010%%00009flow_variables['err_bool'] = 0%%00010%%00009flow_variables['errors'] = ''"/>
        <entry key="rowLimit" type="xint" value="1000"/>
        <entry key="convertMissingToPython" type="xboolean" value="false"/>
        <entry key="convertMissingFromPython" type="xboolean" value="false"/>
        <entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
        <entry key="sentinelValue" type="xint" value="0"/>
        <entry key="chunkSize" type="xint" value="500000"/>
        <entry key="pythonVersionOption" type="xstring" value="python3"/>
        <entry key="python2Command" type="xstring" value=""/>
        <entry key="python3Command" type="xstring" value=""/>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="check form"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="529"/>
        <entry key="y-coordinate" type="xint" value="299"/>
        <entry key="width" type="xint" value="142"/>
        <entry key="height" type="xint" value="17"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="10"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles">
            <config key="style_0">
                <entry key="start" type="xint" value="0"/>
                <entry key="length" type="xint" value="10"/>
                <entry key="fontname" type="xstring" value="Sans"/>
                <entry key="fontstyle" type="xint" value="0"/>
                <entry key="fontsize" type="xint" value="10"/>
                <entry key="fgcolor" type="xint" value="0"/>
            </config>
        </config>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="IDLE"/>
    <entry key="factory" type="xstring" value="org.knime.python2.nodes.variables.Python2VariablesNodeFactory"/>
    <entry key="node-name" type="xstring" value="Python Edit Variable (legacy)"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.7.0.v202211291448"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Python 2 Integration (legacy)"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.7.1.v202301311311"/>
    <config key="factory_settings"/>
    <entry key="name" type="xstring" value="Python Edit Variable (legacy)"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>
