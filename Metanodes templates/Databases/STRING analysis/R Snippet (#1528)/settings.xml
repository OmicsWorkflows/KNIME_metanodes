<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="script" type="xstring" value="library(tidyr)%%00010library(dplyr)%%00010%%00010# load dataframe%%00010df &lt;- knime.in%%00010%%00010# split rows containing multiple Protein IDs into multiple rows%%00010df_sep &lt;- separate_rows(df, &quot;UniProt_Protein ID&quot;, sep = &quot;;&quot;)%%00010df_sep &lt;- as.data.frame(df_sep)%%00010%%00010# load taxon id as integer%%00010taxon &lt;- as.integer(knime.flow.in[[&quot;taxon_id&quot;]])%%00010%%00010# turn contrast string into vector%%00010contrasts &lt;- unlist(strsplit(knime.flow.in[[&quot;contrasts&quot;]], &quot;,&quot;))%%00010loop &lt;- seq(1,knime.flow.in[[&quot;iterations&quot;]])%%00010%%00010# create a new data frame%%00010output_df &lt;- data.frame(Contrast = contrasts,%%00010%%00009%%00009%%00009%%00009    Upregulated = rep(&quot;x&quot;, times = length(contrasts)),%%00010%%00009%%00009%%00009%%00009    Downregulated = rep(&quot;x&quot;, times = length(contrasts)),%%00010%%00009%%00009%%00009%%00009    stringsAsFactors = FALSE)%%00010%%00010# function for filtering out a list of up/downregulated proteins%%00010get_list &lt;- function(df, string){%%00010%%00009list &lt;- df %&gt;%%%00010%%00009%%00009filter(logFC == string) %&gt;%%%00010%%00009%%00009select(ID) %&gt;%%%00010%%00009%%00009unlist() %&gt;%%%00010%%00009%%00009as.character()%%00010%%00009return(list)%%00010}%%00010%%00010# function for getting a link to STRING website%%00010get_link &lt;- function(df, string){%%00010%%00009list &lt;- get_list(df, string)%%00010%%00009list_length &lt;- length(list)%%00010%%00010%%00009if(list_length == 0){%%00010%%00009%%00009output &lt;- &quot;no proteins found&quot;%%00010%%00009} else if(list_length == 1){%%00010%%00009%%00009output &lt;- &quot;only 1 protein found&quot;%%00010%%00009} else{%%00010%%00009%%00009list &lt;- paste(list, collapse = &quot;%0d&quot;)%%00010%%00009%%00009query &lt;- paste(c(&quot;https://string-db.org/api/tsv/get_link?identifiers=&quot;, list, &quot;&amp;species=&quot;, taxon), collapse = &quot;&quot;)%%00010%%00009%%00009output &lt;- read.table(file = query, header = TRUE)[1,1]%%00010%%00009%%00009output &lt;- as.character(output)%%00010%%00009}%%00010%%00009return(output)%%00010}%%00010i &lt;- 2%%00010# create a for-loop which fills in the output df%%00010for(i in loop){%%00010%%00009x &lt;- contrasts[i]%%00010%%00010%%00009df_filtered &lt;- cbind(df_sep$&quot;UniProt_Protein ID&quot;, select(df_sep, contains(x)))%%00010%%00009colnames(df_filtered) &lt;- c(&quot;ID&quot;, &quot;pvalue&quot;, &quot;logFC&quot;)%%00010%%00009df_filtered &lt;- df_filtered %&gt;% %%00010%%00009%%00009filter(pvalue == 1)%%00010%%00010%%00009upreg &lt;- get_link(df_filtered, &quot;upregulated&quot;)%%00010%%00009downreg &lt;- get_link(df_filtered, &quot;downregulated&quot;)%%00010%%00010%%00009output_df$Upregulated[i] &lt;- upreg%%00010%%00009output_df$Downregulated[i] &lt;- downreg%%00010}%%00010%%00010# output table%%00010knime.out &lt;- output_df"/>
<entry key="templateUUID" type="xstring" isnull="true" value=""/>
<entry key="version" type="xstring" value="version 1.x"/>
<entry key="Output non numbers (NaN, Inf, -Inf) as missing cells" type="xboolean" value="false"/>
<entry key="sendRowNames" type="xboolean" value="true"/>
<entry key="sendBatchSize" type="xint" value="10000"/>
<entry key="knimeInType" type="xstring" value="data.frame"/>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="retrieve links %%00010to STRING"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="849"/>
<entry key="y-coordinate" type="xint" value="219"/>
<entry key="width" type="xint" value="142"/>
<entry key="height" type="xint" value="34"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="16777215"/>
<entry key="defFontSize" type="xint" value="11"/>
<entry key="annotation-version" type="xint" value="20151123"/>
<config key="styles">
<config key="style_0">
<entry key="start" type="xint" value="0"/>
<entry key="length" type="xint" value="25"/>
<entry key="fontname" type="xstring" value="Sans"/>
<entry key="fontstyle" type="xint" value="0"/>
<entry key="fontsize" type="xint" value="11"/>
<entry key="fgcolor" type="xint" value="0"/>
</config>
</config>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="IDLE"/>
<entry key="factory" type="xstring" value="org.knime.r.RSnippetNodeFactory"/>
<entry key="node-name" type="xstring" value="R Snippet"/>
<entry key="node-bundle-name" type="xstring" value="KNIME R-Project nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.r"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="4.1.1.v202001312017"/>
<entry key="node-feature-name" type="xstring" value="KNIME Interactive R Statistics Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.r.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="4.1.1.v202001312017"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="R Snippet"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
