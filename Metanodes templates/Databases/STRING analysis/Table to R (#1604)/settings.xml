<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="script" type="xstring" value="library(tidyr)%%00010library(dplyr)%%00010df &lt;- knime.in%%00010%%00010# number of the column with the organism name%%00010organism_column &lt;- 2%%00010%%00010# columns in the input table to keep in case of the organism name extraction using the regex%%00010columns_to_keep &lt;- c(knime.flow.in[[&quot;protein_column&quot;]], knime.flow.in[[&quot;organism_column&quot;]], &quot;split_0&quot;)%%00010%%00010# turn factors into characters%%00010df &lt;- data.frame(lapply(df, as.character), stringsAsFactors=FALSE)%%00010%%00010# checks for the number of columns in the df, if &gt;2, the regex splitting took place and needs to be handled first%%00010if(ncol(df) &gt; 2){%%00010%%00009# keeps only the columns to be further processed, i.e. drop split_1 and other parts parsed using the regex formula if present%%00010%%00009df &lt;- df[columns_to_keep]%%00010%%00009# renames the columns so it is clear what is the original column and the column with the parsed information%%00010%%00009colnames(df) &lt;- c(knime.flow.in[[&quot;protein_column&quot;]],paste(knime.flow.in[[&quot;organism_column&quot;]], &quot;_orig&quot;, sep=&quot;&quot;),paste(knime.flow.in[[&quot;organism_column&quot;]], &quot;_parsed&quot;, sep=&quot;&quot;))%%00010%%00009# adjusts the variable holding the column with the extracted organism name%%00010%%00009organism_column &lt;- 3%%00010}%%00010# creates two dataframes with the rows having the target and other organisms so both can be exported later on as well%%00010index_target &lt;- which(df[,organism_column] == knime.flow.in[[&quot;organism&quot;]])%%00010index_other &lt;- which(df[,organism_column] != knime.flow.in[[&quot;organism&quot;]])%%00010df_target &lt;- df[index_target,]%%00010df_other &lt;- df[index_other,]%%00010%%00010# creates a new flow variable for if switch depending on number of proteins being &gt; 400%%00010if(nrow(df_target) &gt; 400){%%00010%%00009switch_length &lt;- &quot;bottom&quot;%%00010} else {%%00010%%00009switch_length &lt;- &quot;top&quot;%%00010}"/>
<entry key="templateUUID" type="xstring" isnull="true" value=""/>
<entry key="version" type="xstring" value="version 1.x"/>
<entry key="Output non numbers (NaN, Inf, -Inf) as missing cells" type="xboolean" value="false"/>
<entry key="sendRowNames" type="xboolean" value="true"/>
<entry key="sendBatchSize" type="xint" value="10000"/>
<entry key="knimeInType" type="xstring" value="data.frame"/>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="prepare the tables %%00010of the target and other %%00010organisms/IDs"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="1406"/>
<entry key="y-coordinate" type="xint" value="179"/>
<entry key="width" type="xint" value="151"/>
<entry key="height" type="xint" value="51"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="16777215"/>
<entry key="defFontSize" type="xint" value="10"/>
<entry key="annotation-version" type="xint" value="20151123"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="CONFIGURED"/>
<entry key="factory" type="xstring" value="org.knime.r.TableToRNodeFactory"/>
<entry key="node-name" type="xstring" value="Table to R"/>
<entry key="node-bundle-name" type="xstring" value="KNIME R-Project nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.r"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="4.1.1.v202001312017"/>
<entry key="node-feature-name" type="xstring" value="KNIME Interactive R Statistics Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.r.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="4.1.1.v202001312017"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Table to R"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
