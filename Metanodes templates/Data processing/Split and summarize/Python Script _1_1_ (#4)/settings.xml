<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="sourceCode" type="xstring" value="import numpy as np%%00010# Copy input to output%%00010changed_table = input_table.copy()%%00010%%00010def string_to_list(string):%%00010    #print(string)%%00010    #splitting string from table in ';'%%00010    list_s = str(string).split(flow_variables['delimiter'])%%00010    #print(result)%%00010    list_n = []%%00010    #converting string in list to number%%00010    #for item in list_s:%%00010    %%00009#try:%%00010    %%00009%%00009#list_n.append(float(item))%%00010    %%00009#except:%%00010    %%00009%%00009#pass%%00010    try:%%00010    %%00009list_n = list(map(float, list_s))%%00010    except:%%00010    %%00009pass%%00010    #print(list_n)%%00010    #count mean from numbers in list%%00010    if len(list_n) &gt; 1:%%00010    %%00009if flow_variables['calculated_value'] == 'mean':%%00010    %%00009%%00009result = np.mean(list_n)%%00010    %%00009else:%%00010    %%00009%%00009result = np.max(list_n)%%00010    elif len(list_n) == 1:%%00010    %%00009result = list_n[0]%%00010    else:%%00010    %%00009result = None%%00010    %%00009%%00010    return result%%00010#applying function string_to_list for all table%%00010output_table = changed_table.applymap(lambda x: string_to_list(x))%%00010%%00010"/>
<entry key="rowLimit" type="xint" value="1000"/>
<entry key="pythonVersionOption" type="xstring" value="PYTHON3"/>
<entry key="convertMissingToPython" type="xboolean" value="false"/>
<entry key="convertMissingFromPython" type="xboolean" value="false"/>
<entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
<entry key="sentinelValue" type="xint" value="0"/>
<entry key="chunkSize" type="xint" value="500000"/>
<entry key="python2Command" type="xstring" value=""/>
<entry key="python3Command" type="xstring" value=""/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="CONFIGURED"/>
<entry key="factory" type="xstring" value="org.knime.python2.nodes.script.Python2ScriptNodeFactory"/>
<entry key="node-name" type="xstring" value="Python Script (1⇒1)"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="3.7.0.v201811291930"/>
<entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="3.7.1.v201901281201"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Python Script (1⇒1)"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
