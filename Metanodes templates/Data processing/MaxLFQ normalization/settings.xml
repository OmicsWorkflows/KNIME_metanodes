<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model"/>
    <config key="variables"/>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value=""/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="1230"/>
        <entry key="y-coordinate" type="xint" value="79"/>
        <entry key="width" type="xint" value="142"/>
        <entry key="height" type="xint" value="17"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="10"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles"/>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="IDLE"/>
    <entry key="workflow-file" type="xstring" value="workflow.knime"/>
    <entry key="virtual-in-ID" type="xint" value="1736"/>
    <config key="inports">
        <config key="inport_0">
            <entry key="index" type="xint" value="0"/>
            <config key="type">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
        <config key="inport_1">
            <entry key="index" type="xint" value="1"/>
            <config key="type">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
    </config>
    <entry key="virtual-out-ID" type="xint" value="1737"/>
    <config key="outports">
        <config key="outport_0">
            <entry key="index" type="xint" value="0"/>
            <config key="type">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
    </config>
    <config key="metadata">
        <entry key="description" type="xstring" value="MaxLFQ normalization/quantification as implemented in the iq R package (Pham et al. 2020).%%00010%%00010This metanode requires two wide tables as input, first is the protein table to which the results will be added and second is the table containing information about individidual peptides. It is required to select matching columns with protein group information in both columns based on which the tables will be merged.%%00010%%00010It is possible to perform median normalization on peptide level prior to MaxLFQ. This is recommended by the authors of this package e.g. when processing MaxQuant outputs. For processing DIA-NN outputs, no further normalization is necessary, but it is ideal to use the Precursor.Normalised data for MaxLFQ calculation. More advanced normalization methods need to performed prior to running this metanode. Do not use log2-transformed data, log2 transformation is already a part of the used algorithm.%%00010%%00010After selecting peptide intensity columns, provide also a common prefix and suffix which needs to be removed in order to extract sample names from these column names. These extracted sample names will be used for naming new columns containing the calculated MaxLFQ values.%%00010%%00010It is also necessary to select a single column containing unique peptide identifier. If there is no such column or if there are multiple (e.g. columns containing modified sequence and charge in MaxQuant outputs), this column needs to be added prior to running this metanode.%%00010%%00010=================%%00010%%00010Used programs and tools and their respective licenses at the time of the metanode creation. Version numbers and the licenses might differ based on your local installation. Please inspect your local installation and contact us if you can not locate your local version and or license terms.%%00010%%00010KNIME nodes (The KNIME nodes consists of the following GNU GPL 3.0 License. Licence terms are available here: https://www.gnu.org/licenses/gpl.html)%%00010Python 3 (The Python consists of the following Python 3.6 License. License terms are available here: https://docs.python.org/3.6/license.html)%%00010R 4.2.0 (The R consists of the following GPL-3 License. License terms are available here: https://www.r-project.org/Licenses/GPL-3)%%00010%%00010The metanode was created in KNIME 4.6.3 running inside the docker image (https://hub.docker.com/r/cfprot/knime/), tag 4.6.3a.%%00010%%00010=================%%00010%%00010This version of metanode is available under the GNU GPL 3.0 License, unless stated otherwise. The full version of the license terms is available at https://www.gnu.org/licenses/gpl.html.%%00010Version: 1.0.2 from 2023-06-29%%00010Contact person: Karolina Krystofova (435328@muni.cz)%%00010More information can be found at https://github.com/OmicsWorkflows/KNIME_metanodes"/>
        <config key="inports">
            <config key="inport_0">
                <entry key="name" type="xstring" value="Protein table"/>
                <entry key="description" type="xstring" value="Table grouped on protein level"/>
                <entry key="index" type="xint" value="0"/>
            </config>
            <config key="inport_1">
                <entry key="name" type="xstring" value="Peptide table"/>
                <entry key="description" type="xstring" value="Table containing peptide information"/>
                <entry key="index" type="xint" value="1"/>
            </config>
        </config>
        <config key="outports">
            <config key="outport_0">
                <entry key="name" type="xstring" value="MaxLFQ results"/>
                <entry key="description" type="xstring" value="Output table with appended MaxLFQ results"/>
                <entry key="index" type="xint" value="0"/>
            </config>
        </config>
    </config>
    <config key="workflow_template_information">
        <entry key="role" type="xstring" value="Template"/>
        <entry key="timestamp" type="xstring" value="2023-06-29 14:08:10 +0200"/>
        <entry key="sourceURI" type="xstring" isnull="true" value=""/>
        <entry key="templateType" type="xstring" value="SubNode"/>
    </config>
    <entry key="layoutJSON" type="xstring" value="{&quot;parentLayoutLegacyMode&quot;:false}"/>
    <entry key="configurationLayoutJSON" type="xstring" value="{}"/>
    <entry key="hideInWizard" type="xboolean" value="false"/>
    <entry key="customCSS" type="xstring" value=""/>
</config>
