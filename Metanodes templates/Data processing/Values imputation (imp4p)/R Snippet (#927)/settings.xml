<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="script" type="xstring" value="# libraries required%%00010library(imp4p)%%00010set.seed(128)%%00010%%00010# data input (columns)%%00010rframe &lt;- knime.in%%00010frame &lt;- data.matrix(rframe)%%00010%%00010# exclude rows containing NA values only%%00010#frame[rowSums(is.na(frame)) &lt; ncol(frame),]%%00010frame &lt;- frame[!(rowSums(is.na(frame))==NCOL(frame)),] %%00010%%00010# copy of the frame because of dimnames appending in the end... maybe dimnames would be enough, CHECK%%00010copy &lt;- frame%%00010%%00010# data matrix must be numbers only, so attributes {dimnames} must be deleted%%00010dimnames(frame) &lt;- NULL%%00010%%00010# factors indicating experimental conditions. Strsplit function allows separation of user-given experimental design by&quot;,&quot;%%00010NA_conditions &lt;- trimws(unlist(strsplit(knime.flow.in[[&quot;NA_condition&quot;]],&quot;,&quot;)))%%00010NA_conditions_F &lt;- as.factor(NA_conditions)%%00010%%00010# factors indicating biological replicates %%00010# default value is NULL. If user provides any design, it is converted to factors%%00010if (knime.flow.in[[&quot;NA_repbio&quot;]] != &quot;NULL&quot;) {%%00010%%00009NA_repbio &lt;- trimws(unlist(strsplit(knime.flow.in[[&quot;NA_repbio&quot;]],&quot;,&quot;)))%%00010%%00009NA_repbio_F &lt;- as.factor(NA_repbio)%%00010} else {%%00010%%00009NA_repbio_F &lt;- NULL%%00010}%%00010%%00010# factors indicating technical replicates%%00010# default value is NULL. If user provides any design, it is converted to factors%%00010if (knime.flow.in[[&quot;NA_reptech&quot;]] != &quot;NULL&quot;) {%%00010%%00009NA_reptech &lt;- trimws(unlist(strsplit(knime.flow.in[[&quot;NA_reptech&quot;]],&quot;,&quot;)))%%00010%%00009NA_reptech_F &lt;- as.factor(NA_reptech)%%00010} else {%%00010%%00009NA_reptech_F &lt;- NULL%%00010}%%00010%%00010# imputation function via impute.mi%%00010if (knime.flow.in[[&quot;imp_method&quot;]] == &quot;multiple imputation&quot;){%%00010%%00009final &lt;- impute.mi(tab=frame, conditions=NA_conditions_F, %%00010%%00009%%00009%%00009%%00009repbio=NA_repbio_F, reptech=NA_reptech_F, %%00010%%00009%%00009%%00009%%00009nb.iter=knime.flow.in[[&quot;nb_iter&quot;]],%%00010%%00009%%00009%%00009%%00009selec=&quot;all&quot;,%%00010%%00009%%00009%%00009%%00009siz=&quot;all&quot;,%%00010%%00009%%00009%%00009%%00009q=0.95,%%00010%%00009%%00009%%00009%%00009q.min=knime.flow.in[[&quot;q_min&quot;]],%%00010%%00009%%00009%%00009%%00009q.norm=knime.flow.in[[&quot;q_norm&quot;]],%%00010%%00009%%00009%%00009%%00009eps=knime.flow.in[[&quot;eps&quot;]],%%00010%%00009%%00009%%00009%%00009progress.bar=FALSE,%%00010%%00009%%00009%%00009%%00009methodMCAR=&quot;mle&quot;)%%00010%%00009output &lt;- as.data.frame(final$tab.imp)%%00010} else if (knime.flow.in[[&quot;imp_method&quot;]] == &quot;MNAR&quot;){%%00010%%00009tab.imp &lt;- impute.mle(tab=frame, conditions=NA_conditions_F)%%00010%%00009final &lt;- impute.igcda(tab=frame, tab.imp=tab.imp, conditions=NA_conditions_F)%%00010%%00009output &lt;- as.data.frame(final)%%00010} else {%%00010%%00009final &lt;- impute.mle(tab=frame, conditions=NA_conditions_F)%%00010%%00009output &lt;- as.data.frame(final)%%00010}%%00010%%00010#attributes names put back%%00010colnames(output) &lt;- dimnames(copy)[[2]]%%00010rownames(output) &lt;- dimnames(copy)[[1]]%%00010%%00010#Simulating data%%00010knime.out &lt;- output"/>
        <entry key="templateUUID" type="xstring" isnull="true" value=""/>
        <entry key="version" type="xstring" value="version 1.x"/>
        <entry key="Output non numbers (NaN, Inf, -Inf) as missing cells" type="xboolean" value="false"/>
        <entry key="sendRowNames" type="xboolean" value="true"/>
        <entry key="sendBatchSize" type="xint" value="10000"/>
        <entry key="knimeInType" type="xstring" value="data.frame"/>
        <entry key="overwriteRHome" type="xboolean" value="true"/>
        <entry key="rHome" type="xstring" value="/home/knimeuser/.Renv/4.2.0/4.5.2a/lib/R"/>
        <entry key="useRPathHome" type="xboolean" value="true"/>
        <entry key="condaVariableName" type="xstring" isnull="true" value=""/>
    </config>
    <config key="variables">
        <entry key="version" type="xstring" value="V_2019_09_13"/>
        <config key="tree">
            <config key="rHome">
                <entry key="used_variable" type="xstring" value="Rcommand"/>
                <entry key="exposed_variable" type="xstring" isnull="true" value=""/>
            </config>
        </config>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="NA imputation"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="609"/>
        <entry key="y-coordinate" type="xint" value="379"/>
        <entry key="width" type="xint" value="142"/>
        <entry key="height" type="xint" value="17"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="10"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles">
            <config key="style_0">
                <entry key="start" type="xint" value="0"/>
                <entry key="length" type="xint" value="13"/>
                <entry key="fontname" type="xstring" value="Sans"/>
                <entry key="fontstyle" type="xint" value="0"/>
                <entry key="fontsize" type="xint" value="10"/>
                <entry key="fgcolor" type="xint" value="0"/>
            </config>
        </config>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="IDLE"/>
    <entry key="factory" type="xstring" value="org.knime.r.RSnippetNodeFactory"/>
    <entry key="node-name" type="xstring" value="R Snippet"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME R-Project nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.r"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.5.2.v202203171119"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Interactive R Statistics Integration"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.r.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.5.2.v202203171119"/>
    <config key="factory_settings"/>
    <entry key="name" type="xstring" value="R Snippet"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>
