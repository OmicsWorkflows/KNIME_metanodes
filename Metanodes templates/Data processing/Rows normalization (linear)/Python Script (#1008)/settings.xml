<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="sourceCode" type="xstring" value="import pandas%%00010%%00010# divides each row value based on the specified normalization method%%00010data = input_table_2%%00010%%00010# gets rows statistics based on the normalize_to setting%%00010rows_statistics = getattr(data, flow_variables['normalization_method'])(axis=1)%%00010%%00010normalization_factors = pandas.DataFrame()%%00010%%00010if flow_variables['normalization_factor_usage'] == &quot;value / factor&quot;:%%00010%%00009if flow_variables['normalize_to'] == 'constant':%%00010%%00009%%00009normalization_factors['normalization factors'] = rows_statistics / flow_variables['contant_value']%%00010%%00009else:%%00010%%00009%%00009normalization_factors['normalization factors'] = rows_statistics / getattr(rows_statistics, flow_variables['normalize_to'])()%%00010%%00009%%00010%%00009# divides each row value in dataframe by the actual row values sum%%00010%%00009normalized_rows = (data.T / normalization_factors['normalization factors'].T).T%%00010%%00010elif flow_variables['normalization_factor_usage'] == &quot;value - factor&quot;:%%00010%%00009if flow_variables['normalize_to'] == 'constant':%%00010%%00009%%00009normalization_factors['normalization factors'] = rows_statistics - flow_variables['contant_value']%%00010%%00009else:%%00010%%00009%%00009normalization_factors['normalization factors'] = rows_statistics - getattr(rows_statistics, flow_variables['normalize_to'])()%%00010%%00009%%00010%%00009# divides each row value in dataframe by the actual row values sum%%00010%%00009normalized_rows = (data.T - normalization_factors['normalization factors'].T).T%%00010%%00010# output normalization factors%%00010output_table_2 = normalization_factors%%00010%%00010# adds the suffix to all column names%%00010data_with_suffix = normalized_rows.add_suffix(flow_variables['columns_suffix'])%%00010%%00010# in case not used data should be dropped, only processed data table will be returned%%00010if flow_variables['remove_not_used'] == 1:%%00010%%00009output_table_1 = data_with_suffix%%00010%%00010# if all should be returned, it will add the columns to the original dataframe%%00010# BE AWARE that in case of the same column names, old data will be rewritten by data from the input_table_2!!!%%00010elif flow_variables['remove_not_used'] == 0:%%00010%%00009data_to_add_columns = list(data_with_suffix.columns.values)%%00010%%00009output_table_1 = input_table_1%%00010%%00009output_table_1[data_to_add_columns] = data_with_suffix[data_to_add_columns]%%00010"/>
        <entry key="rowLimit" type="xint" value="1000"/>
        <entry key="convertMissingToPython" type="xboolean" value="false"/>
        <entry key="convertMissingFromPython" type="xboolean" value="false"/>
        <entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
        <entry key="sentinelValue" type="xint" value="0"/>
        <entry key="chunkSize" type="xint" value="500000"/>
        <entry key="pythonVersionOption" type="xstring" value="python3"/>
        <entry key="python2Command" type="xstring" value=""/>
        <entry key="python3Command" type="xstring" value="/home/knimeuser/.pyenv/versions/4-5-2a/bin/python3"/>
    </config>
    <config key="variables">
        <entry key="version" type="xstring" value="V_2019_09_13"/>
        <config key="tree">
            <config key="python3Command">
                <entry key="used_variable" type="xstring" value="python3command"/>
                <entry key="exposed_variable" type="xstring" isnull="true" value=""/>
            </config>
        </config>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="rows normalization"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="309"/>
        <entry key="y-coordinate" type="xint" value="579"/>
        <entry key="width" type="xint" value="142"/>
        <entry key="height" type="xint" value="17"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="10"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles">
            <config key="style_0">
                <entry key="start" type="xint" value="0"/>
                <entry key="length" type="xint" value="18"/>
                <entry key="fontname" type="xstring" value="Sans"/>
                <entry key="fontstyle" type="xint" value="0"/>
                <entry key="fontsize" type="xint" value="10"/>
                <entry key="fgcolor" type="xint" value="0"/>
            </config>
        </config>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="IDLE"/>
    <entry key="factory" type="xstring" value="org.knime.python2.nodes.script2.Python2ScriptNodeFactory2"/>
    <entry key="node-name" type="xstring" value="Python Script"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.5.0.v202111232310"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.5.2.v202203041212"/>
    <config key="factory_settings"/>
    <config key="node_creation_config">
        <config key="Input object (pickled)"/>
        <config key="Input table">
            <config key="port_0">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
            <config key="port_1">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
        <config key="Output table">
            <config key="port_0">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
            <config key="port_1">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
        <config key="Output image"/>
        <config key="Output object (pickled)"/>
    </config>
    <entry key="name" type="xstring" value="Python Script"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
        <config key="port_2">
            <entry key="index" type="xint" value="2"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>
