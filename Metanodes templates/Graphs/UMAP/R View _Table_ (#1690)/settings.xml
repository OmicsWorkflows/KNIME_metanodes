<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="Image width" type="xint" value="640"/>
        <entry key="Image height" type="xint" value="640"/>
        <entry key="Image resolution" type="xstring" value="NA"/>
        <entry key="Image background color" type="xstring" value="#ffffff"/>
        <entry key="Text point size" type="xint" value="12"/>
        <config key="R settings">
            <entry key="script" type="xstring" value="# libraries%%00010suppressPackageStartupMessages(library(tidyverse))%%00010suppressPackageStartupMessages(library(viridis))%%00010library(umap)%%00010library(ggrepel)%%00010%%00010# load dataframe%%00010df &lt;- knime.in%%00010%%00010# get points group%%00010if(knime.flow.in[[&quot;group_selection (index)&quot;]] == 1) {%%00010%%00009group &lt;- trimws(unlist(strsplit(knime.flow.in[[&quot;manual_groups&quot;]], &quot;,&quot;)))%%00010} else if (knime.flow.in[[&quot;group_selection (index)&quot;]] == 2 &amp;&amp; knime.flow.in[[&quot;rows&quot;]] == &quot;rows&quot;){%%00010%%00009group &lt;- unlist(lapply(df$Group, as.character))%%00010%%00009df &lt;- select(df, -Group)%%00010}%%00010%%00010# scale data%%00010if(knime.flow.in[[&quot;rows&quot;]] == &quot;rows&quot;) {%%00010%%00009complete &lt;- complete.cases(df)%%00010%%00009df_no_na &lt;- df[complete,]%%00010%%00009df_no_na_t &lt;- as.data.frame(t(df_no_na))%%00010%%00009df_scaled_no_na &lt;- scale(df_no_na_t, center = TRUE, scale = TRUE)%%00010%%00009df_scaled_no_na &lt;- as.data.frame(df_scaled_no_na)%%00010%%00009%%00010%%00009if (knime.flow.in[[&quot;group_selection (index)&quot;]] == 2) group &lt;- group[complete]%%00010} else {%%00010%%00009df_scaled &lt;- scale(df, center = TRUE, scale = TRUE)%%00010%%00009df_scaled_no_na &lt;- na.omit(df_scaled)%%00009%%00010}%%00010%%00010# perform UMAP%%00010umap.defaults$random_state &lt;- 123%%00010if(ncol(df_scaled_no_na) &lt; 15) umap.defaults$n_neighbors &lt;- ncol(df_scaled_no_na)%%00010%%00010run &lt;- umap(t(df_scaled_no_na), config = umap.defaults)%%00010%%00010# UMAP df%%00010umap_df &lt;- data.frame(Point = rownames(run$layout),%%00010%%00009%%00009%%00009%%00009  UMAP1 = run$layout[,1],%%00010%%00009%%00009%%00009       UMAP2 = run$layout[,2])%%00010rownames(umap_df) &lt;- NULL%%00010%%00010if(knime.flow.in[[&quot;group_selection (index)&quot;]] != 0) umap_df$Group &lt;- group%%00010%%00009%%00010# plot title%%00010if(knime.flow.in[[&quot;rows&quot;]] == &quot;rows&quot;){%%00010%%00009title &lt;- &quot;UMAP projection of dataframe rows&quot;%%00010} else {%%00010%%00009title &lt;- &quot;UMAP projection of dataframe columns&quot;%%00010}%%00010%%00010# create plots%%00010if(knime.flow.in[[&quot;group_selection&quot;]] == &quot;no grouping&quot;){%%00010%%00009p &lt;- umap_df %&gt;%%%00010%%00009%%00009ggplot(aes(x = UMAP1, y = UMAP2, colour = Point, label = Point)) +%%00010%%00009%%00009geom_point(size = 2) +%%00010%%00009%%00009theme_bw() +%%00010%%00009%%00009labs(title = title,%%00010%%00009%%00009colour = &quot;Point&quot;) +%%00010%%00009%%00009scale_colour_viridis_d(direction = -1, end = 0.95)%%00010} else {%%00010%%00009p &lt;- umap_df %&gt;%%%00010%%00009%%00009ggplot(aes(x = UMAP1, y = UMAP2, colour = Group, label = Point)) +%%00010%%00009%%00009geom_point(size = 2) +%%00010%%00009%%00009theme_bw() +%%00010%%00009%%00009labs(title = title,%%00010%%00009%%00009%%00009colour = &quot;Group&quot;) +%%00010%%00009%%00009scale_colour_viridis_d(direction = -1, end = 0.95)%%00010}%%00010%%00010if(knime.flow.in[[&quot;show_legend&quot;]] == 1) {%%00010%%00009p &lt;- p + theme(legend.position = &quot;right&quot;,%%00010%%00009%%00009 %%00009 %%00009legend.title = element_text(face = &quot;bold&quot;),%%00010%%00009%%00009%%00009 %%00009plot.title = element_text(face = &quot;bold&quot;, hjust = 0.5))%%00010} else {%%00010%%00009p &lt;- p + theme(legend.position = &quot;none&quot;,%%00010%%00009%%00009%%00009 %%00009plot.title = element_text(face = &quot;bold&quot;, hjust = 0.5))%%00010}%%00010%%00010if(knime.flow.in[[&quot;subtitle&quot;]] != &quot;&quot;) p &lt;- p + labs(subtitle = knime.flow.in[[&quot;subtitle&quot;]])%%00010%%00010if(knime.flow.in[[&quot;point_annotation&quot;]] == 1) p &lt;- p + geom_text_repel(size = 3, show.legend = FALSE, col = &quot;grey20&quot;)%%00010%%00010p"/>
            <entry key="templateUUID" type="xstring" isnull="true" value=""/>
            <entry key="version" type="xstring" value="version 1.x"/>
            <entry key="Output non numbers (NaN, Inf, -Inf) as missing cells" type="xboolean" value="false"/>
            <entry key="sendRowNames" type="xboolean" value="true"/>
            <entry key="sendBatchSize" type="xint" value="10000"/>
            <entry key="knimeInType" type="xstring" value="data.frame"/>
            <entry key="overwriteRHome" type="xboolean" value="true"/>
            <entry key="rHome" type="xstring" value="/home/knimeuser/.Renv/4.2.0/4.5.2a/lib/R"/>
            <entry key="useRPathHome" type="xboolean" value="true"/>
            <entry key="condaVariableName" type="xstring" isnull="true" value=""/>
        </config>
        <entry key="Image type" type="xstring" value="PNG"/>
    </config>
    <config key="variables">
        <entry key="version" type="xstring" value="V_2019_09_13"/>
        <config key="tree">
            <config key="Image width">
                <entry key="used_variable" type="xstring" value="width"/>
                <entry key="exposed_variable" type="xstring" isnull="true" value=""/>
            </config>
            <config key="Image height">
                <entry key="used_variable" type="xstring" value="height"/>
                <entry key="exposed_variable" type="xstring" isnull="true" value=""/>
            </config>
        </config>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="run UMAP"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="1990"/>
        <entry key="y-coordinate" type="xint" value="301"/>
        <entry key="width" type="xint" value="142"/>
        <entry key="height" type="xint" value="17"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="10"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles">
            <config key="style_0">
                <entry key="start" type="xint" value="0"/>
                <entry key="length" type="xint" value="8"/>
                <entry key="fontname" type="xstring" value="Sans"/>
                <entry key="fontstyle" type="xint" value="0"/>
                <entry key="fontsize" type="xint" value="10"/>
                <entry key="fgcolor" type="xint" value="0"/>
            </config>
        </config>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="IDLE"/>
    <entry key="factory" type="xstring" value="org.knime.r.RViewNodeFactory"/>
    <entry key="node-name" type="xstring" value="R View (Table)"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME R-Project nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.r"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.6.0.v202205161326"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Interactive R Statistics Integration"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.r.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.6.0.v202205161326"/>
    <config key="factory_settings"/>
    <entry key="name" type="xstring" value="R View (Table)"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>
