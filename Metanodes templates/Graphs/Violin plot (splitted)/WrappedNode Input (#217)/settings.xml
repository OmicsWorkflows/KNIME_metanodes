<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<config key="variable-filter">
<entry key="filter-type" type="xstring" value="STANDARD"/>
<config key="included_names">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="excluded_names">
<entry key="array-size" type="xint" value="0"/>
</config>
<entry key="enforce_option" type="xstring" value="EnforceInclusion"/>
<config key="name_pattern">
<entry key="pattern" type="xstring" value=""/>
<entry key="type" type="xstring" value="Wildcard"/>
<entry key="caseSensitive" type="xboolean" value="true"/>
</config>
</config>
<entry key="variable-prefix" type="xstring" isnull="true" value=""/>
<entry key="sub-node-description" type="xstring" value="Metanode to create splitted violin plot from selected columns of input table.%%00010%%00010User is expected to provide two sets of columns:%%00010- Dataset 1: the columns which will correspond to the left parts of the splitted violin plots (e.g. protein groups intensities before missing values imputation)%%00010- Dataset 2: the columns which will correspond to the right parts of the splitted violin plots (e.g. protein groups intensities after missing values imputation)%%00010The samples will be then automatically paired based on the order in dataset1 and dataset2 (ie the first sample from dataset1 and dataset2 will result in one splitted violin plot and accordingly).%%00010The names of the particular splitted violin plots are then specified in the &quot;Splitted violin plots names&quot; form. %%00010In the &quot;Legend&quot; form is the user expected to provide common string for dataset1 samples and dataset2 samples (e.g. before_imputation, after_imputation) which will be displayed then as a graph legend.%%00010%%00010The output, interactive splitted violin plots, will be automatically opened in the viewer after node execution as well as saved into set directory as .html file. The plot can be also saved as a static figure in .png format from the viewer.%%00010%%00010Note: any data preprocessing (like transformation, normalization) should be done prior the metanode usage!%%00010%%00010=================%%00010%%00010Used programs and tools and their respective licenses at the time of the metanode creation. Version numbers and the licenses might differ based on your local installation. Please inspect your local installation and contact us if you can not locate your local version and or license terms.%%00010%%00010KNIME nodes (The KNIME nodes consists of the following GNU GPL 3.0 License. Licence terms are available here: https://www.gnu.org/licenses/gpl.html)%%00010R 3.4.4 (The R consists of the following GNU General Public Licences. Licence terms are available here: https://www.r-project.org/Licenses/)%%00010R package plotly (The plotly consists of the following MIT license and License file. Licence terms are available here: https://cran.r-project.org/web/licenses/MIT and https://cran.r-project.org/web/packages/plotly/LICENSE)%%00010%%00010The metanode was created in KNIME 3.7.1 running inside the docker image (https://hub.docker.com/r/cfprot/knime/), tag 3.7.1a.%%00010%%00010=================%%00010%%00010This version of metanode is available under the GNU GPL 3.0 License, unless stated otherwise. The full version of the license terms is available at https://www.gnu.org/licenses/gpl.html.%%00010Version: 1.0.0 from 2019-05-11%%00010Contact person: Kristina Gomoryova (423436@mail.muni.cz)%%00010More information can be found at https://github.com/OmicsWorkflows/KNIME_metanodes"/>
<config key="port-names">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" value="input data"/>
</config>
<config key="port-descriptions">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" value="input table containing columns to be selected for visualization"/>
</config>
</config>
<entry key="customDescription" type="xstring" value=""/>
<entry key="state" type="xstring" value="IDLE"/>
<entry key="isDeletable" type="xboolean" value="false"/>
<entry key="factory" type="xstring" value="org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory"/>
<entry key="node-name" type="xstring" value="WrappedNode Input"/>
<entry key="node-bundle-name" type="xstring" value="KNIME Core API"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.core"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="3.7.1.v201901281550"/>
<entry key="node-feature-name" type="xstring" value="KNIME Core"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.base.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="3.7.1.v201901291053"/>
<config key="factory_settings">
<config key="port_0">
<entry key="index" type="xint" value="0"/>
<config key="type">
<entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
</config>
</config>
</config>
<entry key="name" type="xstring" value="WrappedNode Input"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
