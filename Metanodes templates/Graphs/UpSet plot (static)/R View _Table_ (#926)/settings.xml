<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="Image width" type="xint" value="640"/>
        <entry key="Image height" type="xint" value="640"/>
        <entry key="Image resolution" type="xstring" value="NA"/>
        <entry key="Image background color" type="xstring" value="#ffffff"/>
        <entry key="Text point size" type="xint" value="12"/>
        <config key="R settings">
            <entry key="script" type="xstring" value="#library required for the UpSet plot%%00010library(UpSetR)%%00010library(grid) # library required for title and subtitle addition%%00010%%00010#data input as a dataframe%%00010frame &lt;- as.data.frame(knime.in)%%00010%%00010# modify main bar colors%%00010if (knime.flow.in[[&quot;main_bar_color&quot;]] == &quot;blue&quot;) main_bar_color &lt;- &quot;dodgerblue2&quot;%%00010if (knime.flow.in[[&quot;main_bar_color&quot;]] == &quot;green&quot;) main_bar_color &lt;- &quot;chartreuse3&quot;%%00010if (knime.flow.in[[&quot;main_bar_color&quot;]] == &quot;red&quot;) main_bar_color &lt;- &quot;firebrick2&quot;%%00010if (knime.flow.in[[&quot;main_bar_color&quot;]] == &quot;yellow&quot;) main_bar_color &lt;- &quot;gold&quot;%%00010if (knime.flow.in[[&quot;main_bar_color&quot;]] == &quot;orange&quot;) main_bar_color &lt;- &quot;darkorange1&quot;%%00010if (knime.flow.in[[&quot;main_bar_color&quot;]] == &quot;pink&quot;) main_bar_color &lt;- &quot;violetred1&quot;%%00010if (knime.flow.in[[&quot;main_bar_color&quot;]] == &quot;grey&quot;) main_bar_color &lt;- &quot;gray40&quot;%%00010%%00010if (knime.flow.in[[&quot;set_bar_color&quot;]] == &quot;blue&quot;) set_bar_color &lt;- &quot;dodgerblue2&quot;%%00010if (knime.flow.in[[&quot;set_bar_color&quot;]] == &quot;green&quot;) set_bar_color &lt;- &quot;chartreuse3&quot;%%00010if (knime.flow.in[[&quot;set_bar_color&quot;]] == &quot;red&quot;) set_bar_color &lt;- &quot;firebrick2&quot;%%00010if (knime.flow.in[[&quot;set_bar_color&quot;]] == &quot;yellow&quot;) set_bar_color &lt;- &quot;gold&quot;%%00010if (knime.flow.in[[&quot;set_bar_color&quot;]] == &quot;orange&quot;) set_bar_color &lt;- &quot;darkorange1&quot;%%00010if (knime.flow.in[[&quot;set_bar_color&quot;]] == &quot;pink&quot;) set_bar_color &lt;- &quot;violetred1&quot;%%00010if (knime.flow.in[[&quot;set_bar_color&quot;]] == &quot;grey&quot;) set_bar_color &lt;- &quot;gray40&quot;%%00010%%00010#assignment of variables%%00010number_of_intersections &lt;- knime.flow.in[[&quot;upset_numberint&quot;]]%%00010upset_order &lt;- knime.flow.in[[&quot;upset_order&quot;]]%%00010upset_nsets &lt;- knime.flow.in[[&quot;upset_nsets&quot;]]%%00010upset_nint &lt;- knime.flow.in[[&quot;upset_numberint&quot;]]%%00010upset_empint &lt;- knime.flow.in[[&quot;upset_empint&quot;]]%%00010%%00010%%00010# NA values are converted to zero%%00010frame1 &lt;- frame%%00010frame1[is.na(frame1)] &lt;- 0%%00010%%00010# whether to display empty intersections or not%%00010if (upset_empint == &quot;off&quot;) upset_empint &lt;- NULL%%00010%%00010%%00010# whether the upset plot is based on the number of intersections or degree of sharing%%00010if (upset_order == &quot;number of intersections&quot;) {%%00010%%00009upset_order &lt;- &quot;freq&quot;%%00010} else {%%00010%%00009upset_order &lt;- &quot;degree&quot;%%00010}%%00010%%00010# error notice when the binary matrix contains only zero values%%00010frame1$sum_of_rows &lt;- rowSums(frame1)%%00010%%00010if (sum(frame1$sum_of_rows) == 0) {%%00010%%00009knime.out &lt;- plot(1,lwd=0,axes=F,xlab=&quot;&quot;,ylab=&quot;&quot;, main=&quot;No graph showed, matrix contains only zero values&quot;)%%00010} else {%%00010%%00010%%00009# if number of sets = 0, all sets will be considered (ie nsets = ncol), otherwise user-chosen number of sets will be considered%%00010%%00009if (upset_nsets == 0) upset_nsets &lt;- ncol(frame1)%%00010%%00009%%00010%%00009# if the user provides non-zero number of intersections to be shown%%00010%%00009if (upset_nint &gt; 0) {%%00010%%00009%%00009upset(frame1, nsets = upset_nsets, %%00010%%00009%%00009%%00009 mainbar.y.label = knime.flow.in[[&quot;y_axis_label&quot;]], sets.x.label = knime.flow.in[[&quot;x_axis_label&quot;]],   %%00010%%00009%%00009%%00009 empty.intersections = upset_empint, nintersects = upset_nint, order.by = upset_order, %%00010%%00009%%00009%%00009 main.bar.color = main_bar_color, sets.bar.color = set_bar_color)%%00010%%00009} else {%%00010%%00009# if user does not provide any number (or provides 0), all intersections will be shown%%00010%%00009%%00009upset(frame1, nsets = upset_nsets, %%00010%%00009%%00009%%00009 mainbar.y.label = knime.flow.in[[&quot;y_axis_label&quot;]], sets.x.label = knime.flow.in[[&quot;x_axis_label&quot;]],   %%00010%%00009%%00009%%00009 order.by = upset_order, empty.intersections = upset_empint, %%00010%%00009%%00009%%00009 main.bar.color = main_bar_color, sets.bar.color = set_bar_color)%%00010%%00009}%%00010}%%00010%%00010# Add title and subtitle%%00010grid.text(knime.flow.in[[&quot;title&quot;]],x = 0.65, y=0.98, gp=gpar(fontsize=18)) # title%%00010grid.text(knime.flow.in[[&quot;subtitle&quot;]],x = 0.65, y=0.93, gp=gpar(fontsize=14)) # subtitle%%00010%%00010# output%%00010knime.out &lt;- frame "/>
            <entry key="templateUUID" type="xstring" isnull="true" value=""/>
            <entry key="version" type="xstring" value="version 1.x"/>
            <entry key="Output non numbers (NaN, Inf, -Inf) as missing cells" type="xboolean" value="false"/>
            <entry key="sendRowNames" type="xboolean" value="true"/>
            <entry key="sendBatchSize" type="xint" value="10000"/>
            <entry key="knimeInType" type="xstring" value="data.frame"/>
            <entry key="overwriteRHome" type="xboolean" value="true"/>
            <entry key="rHome" type="xstring" value="/home/knimeuser/.Renv/3.6.3/4.1.3a/lib/R"/>
            <entry key="useRPathHome" type="xboolean" value="true"/>
            <entry key="condaVariableName" type="xstring" isnull="true" value=""/>
        </config>
        <entry key="Image type" type="xstring" value="PNG"/>
    </config>
    <config key="variables">
        <entry key="version" type="xstring" value="V_2019_09_13"/>
        <config key="tree">
            <config key="Image width">
                <entry key="used_variable" type="xstring" value="plot_width"/>
                <entry key="exposed_variable" type="xstring" isnull="true" value=""/>
            </config>
            <config key="Image height">
                <entry key="used_variable" type="xstring" value="plot_height"/>
                <entry key="exposed_variable" type="xstring" isnull="true" value=""/>
            </config>
            <config key="R settings">
                <config key="rHome">
                    <entry key="used_variable" type="xstring" value="Rcommand"/>
                    <entry key="exposed_variable" type="xstring" isnull="true" value=""/>
                </config>
            </config>
        </config>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="UpSet plotting"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="729"/>
        <entry key="y-coordinate" type="xint" value="99"/>
        <entry key="width" type="xint" value="142"/>
        <entry key="height" type="xint" value="17"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="10"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles"/>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="IDLE"/>
    <entry key="factory" type="xstring" value="org.knime.r.RViewNodeFactory"/>
    <entry key="node-name" type="xstring" value="R View (Table)"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME R-Project nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.r"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.6.0.v202205161326"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Interactive R Statistics Integration"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.r.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.6.0.v202205161326"/>
    <config key="factory_settings"/>
    <entry key="name" type="xstring" value="R View (Table)"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>
