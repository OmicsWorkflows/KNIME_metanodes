<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<entry key="script" type="xstring" value="library(tidyr)%%00010library(dplyr)%%00010%%00010df &lt;- knime.in%%00010%%00010# create a design and sample list%%00010design &lt;- unlist(strsplit(knime.flow.in[[&quot;design_string&quot;]], &quot;,&quot;))%%00010sample_no &lt;- length(unique(df$Sample))%%00010%%00010# create custom palette%%00010palette10 &lt;- c(&quot;#1f77b4&quot;, &quot;#ff7f0e&quot;, &quot;#2ca02c&quot;, &quot;#d62728&quot;, &quot;#9467bd&quot;,%%00010%%00009%%00009%%00009&quot;#8c564b&quot;, &quot;#e377c2&quot;, &quot;#7f7f7f&quot;, &quot;#bcbd22&quot;, &quot;#17becf&quot;)%%00010%%00010palette20 &lt;- c(&quot;#1f77b4&quot;, &quot;#aec7e8&quot;, &quot;#ff7f0e&quot;, &quot;#ffbb78&quot;, %%00010%%00009%%00009%%00009&quot;#2ca02c&quot;, &quot;#98df8a&quot;, &quot;#d62728&quot;, &quot;#ff9896&quot;, %%00010%%00009%%00009%%00009&quot;#9467bd&quot;, &quot;#c5b0d5&quot;, &quot;#8c564b&quot;, &quot;#c49c94&quot;,%%00010%%00009%%00009%%00009&quot;#e377c2&quot;, &quot;#f7b6d2&quot;, &quot;#7f7f7f&quot;, &quot;#c7c7c7&quot;,%%00010%%00009%%00009%%00009&quot;#bcbd22&quot;, &quot;#dbdb8d&quot;, &quot;#17becf&quot;, &quot;#9edae5&quot;)%%00010%%00010linetypes &lt;- unlist(lapply(1:6, function(x) rep(x, times = 20)))%%00010%%00010# number of unique variables%%00010if(knime.flow.in[[&quot;use_design&quot;]] == 1){ # if design is used to group samples, one linetype/different color for every group%%00010%%00009design_values_no &lt;- length(levels(as.factor(design)))%%00010} else { # if no design or design not used for colors, one linetype/different color for every sample%%00010%%00009design_values_no &lt;- sample_no%%00010}%%00010%%00010if(design_values_no &lt;= 10){%%00010%%00009plot_cols &lt;- palette10[1:sample_no]%%00010%%00009plot_linetypes &lt;- rep(1, times = design_values_no)%%00010} else if(design_values_no &lt;= 20){%%00010%%00009plot_cols &lt;- palette20[1:sample_no]%%00010%%00009plot_linetypes &lt;- rep(1, times = design_values_no)%%00010} else {%%00010%%00009rep(palette20, length.out = design_values_no)%%00010%%00009plot_linetypes &lt;- linetypes[design_values_no]%%00010}%%00010%%00010plot_cols_str &lt;- paste(plot_cols, collapse = &quot;,&quot;)%%00010plot_linetypes_str &lt;- paste(plot_linetypes, collapse = &quot;,&quot;)%%00010%%00010# create flow variables for plot colors and lines%%00010knime.flow.out &lt;- list(plot_cols = plot_cols_str,%%00010%%00009%%00009%%00009%%00009   plot_linetypes = plot_linetypes_str)%%00010%%00010knime.out &lt;- knime.in"/>
<entry key="templateUUID" type="xstring" isnull="true" value=""/>
<entry key="version" type="xstring" value="version 1.x"/>
<entry key="Output non numbers (NaN, Inf, -Inf) as missing cells" type="xboolean" value="false"/>
<entry key="sendRowNames" type="xboolean" value="true"/>
<entry key="sendBatchSize" type="xint" value="10000"/>
<entry key="knimeInType" type="xstring" value="data.frame"/>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="get colors and%%00010linetypes for plot"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="1029"/>
<entry key="y-coordinate" type="xint" value="479"/>
<entry key="width" type="xint" value="142"/>
<entry key="height" type="xint" value="34"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<entry key="borderSize" type="xint" value="0"/>
<entry key="borderColor" type="xint" value="16777215"/>
<entry key="defFontSize" type="xint" value="10"/>
<entry key="annotation-version" type="xint" value="20151123"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="IDLE"/>
<entry key="factory" type="xstring" value="org.knime.r.RSnippetNodeFactory"/>
<entry key="node-name" type="xstring" value="R Snippet"/>
<entry key="node-bundle-name" type="xstring" value="KNIME R-Project nodes"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.r"/>
<entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-bundle-version" type="xstring" value="4.1.1.v202001312017"/>
<entry key="node-feature-name" type="xstring" value="KNIME Interactive R Statistics Integration"/>
<entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.r.feature.group"/>
<entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
<entry key="node-feature-version" type="xstring" value="4.1.1.v202001312017"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="R Snippet"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
