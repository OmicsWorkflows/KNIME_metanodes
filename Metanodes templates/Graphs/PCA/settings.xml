<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model"/>
    <config key="variables"/>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value=""/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="1754"/>
        <entry key="y-coordinate" type="xint" value="-279"/>
        <entry key="width" type="xint" value="142"/>
        <entry key="height" type="xint" value="17"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="10"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles"/>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="IDLE"/>
    <config key="nodecontainer_message">
        <entry key="type" type="xstring" value="WARNING"/>
        <entry key="message" type="xstring" value="IF Switch 5:1758:0:980: Errors overwriting node settings with flow variables: Unknown variable &quot;row_switch&quot;"/>
    </config>
    <entry key="workflow-file" type="xstring" value="workflow.knime"/>
    <entry key="virtual-in-ID" type="xint" value="922"/>
    <config key="inports">
        <config key="inport_0">
            <entry key="index" type="xint" value="0"/>
            <config key="type">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
    </config>
    <entry key="virtual-out-ID" type="xint" value="2036"/>
    <config key="outports">
        <config key="outport_0">
            <entry key="index" type="xint" value="0"/>
            <config key="type">
                <entry key="object_class" type="xstring" value="org.knime.core.node.port.image.ImagePortObject"/>
            </config>
        </config>
        <config key="outport_1">
            <entry key="index" type="xint" value="1"/>
            <config key="type">
                <entry key="object_class" type="xstring" value="org.knime.core.node.port.image.ImagePortObject"/>
            </config>
        </config>
        <config key="outport_2">
            <entry key="index" type="xint" value="2"/>
            <config key="type">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
    </config>
    <config key="metadata">
        <entry key="description" type="xstring" value="Metanode use principle component analysis (PCA) to data dimension reduction. It could be used to identify outliers and clusters and for description and vizualization of variables relations.%%00010%%00010Metanode creates PCA plot on selected columns by default, using n rows with the most variable values in individual columns (default n=500). Most variable rows are considered based on the standard deviation (SD).%%00010%%00010WARNING: PCA needs data without missing values, so all rows (or columns in case of PCA on rows) with one or more missing values are removed! You can use imputation step if applicable prior the PCA metanode.%%00010%%00010It is possible to set data standardization (standardization needs data without missing values and zeros) prior to PCA. Standardization will scale data so as to have mean of 0 and unit variance and is recommended for cases where variables might have different units.%%00010%%00010PCA can be done on rows or columns (rows represent proteins/genes/peptides...; columns represent samples). PCA on rows require you to select also annotation column in the form (annotations column should contain unique value in all rows, without any missing value). Column header is used for annotation in case of the PCA on columns. Annotations are possible to be switched off in the form as well.%%00010%%00010Points can be grouped so as to be coloured by the same colour. In case of PCA on columns, the groups need to be set manually in format &quot;A, A, B, B&quot;. In case of PCA on rows, it is necessary to select a column containing information about groups.%%00010%%00010Note: any data preprocessing (e.g. normalization, missing values imputation) should be done prior the metanode usage!%%00010%%00010=================%%00010%%00010Used programs and tools and their respective licenses at the time of the metanode creation. Version numbers and the licenses might differ based on your local installation. Please inspect your local installation and contact us if you can not locate your local version and or license terms.%%00010%%00010KNIME nodes (The KNIME nodes consists of the following GNU GPL 3.0 License. Licence terms are available here: https://www.gnu.org/licenses/gpl.html) %%00010%%00010Python 3 (The Python consists of the following Python 3.6 License. Licence terms are available here: https://docs.python.org/3.6/license.html) %%00010%%00010R 4.2.0 (The R consists of the following GNU General Public Licence. Licence terms are available here: https://www.r-project.org/Licenses/)%%00010%%00010R library factoextra (consists of the following  GNU General Public Licence.  Licence terms are available here: https://cran.r-project.org/web/licenses/GPL-2%%00010%%00010R library ggplot2 (consists of the following GNU General Public Licence. Licence terms are available here: https://ggplot2.tidyverse.org/LICENSE-text.html)%%00010%%00010R library ggrepel (consists of the following GNU General Public Licence Licence terms are available here: . Licence terms are available here: https://cran.r-project.org/web/packages/ggrepel/LICENSE)%%00010%%00010The metanode was created in KNIME 4.7.7 running inside the docker image (https://hub.docker.com/r/cfprot/knime/), tag 4.7.7a%%00010%%00010=================%%00010%%00010This version of metanode is available under the GNU GPL 3.0 License, unless stated otherwise. The full version of the license terms is available at https://www.gnu.org/licenses/gpl.html.%%00010Version: 3.1.0 from 2024-06-20%%00010Contact person: Karolina Krystofova (karolina.krystofova@ceitec.muni.cz)%%00010More information can be found at https://github.com/OmicsWorkflows/KNIME_metanodes"/>
        <config key="inports">
            <config key="inport_0">
                <entry key="name" type="xstring" value="Data"/>
                <entry key="description" type="xstring" value="Data containing columns for PCA plotting"/>
                <entry key="index" type="xint" value="0"/>
            </config>
        </config>
        <config key="outports">
            <config key="outport_0">
                <entry key="name" type="xstring" value="PCA plot"/>
                <entry key="description" type="xstring" value="PCA plot with first two PCs"/>
                <entry key="index" type="xint" value="0"/>
            </config>
            <config key="outport_1">
                <entry key="name" type="xstring" value="Scree plot"/>
                <entry key="description" type="xstring" value="Scree plot explaining variability of new dimensions after PCA"/>
                <entry key="index" type="xint" value="1"/>
            </config>
            <config key="outport_2">
                <entry key="name" type="xstring" value="PC table"/>
                <entry key="description" type="xstring" value="Table of principal components"/>
                <entry key="index" type="xint" value="2"/>
            </config>
        </config>
    </config>
    <config key="workflow_template_information">
        <entry key="role" type="xstring" value="Template"/>
        <entry key="timestamp" type="xstring" value="2024-06-20 20:51:32 +0200"/>
        <entry key="sourceURI" type="xstring" isnull="true" value=""/>
        <entry key="templateType" type="xstring" value="SubNode"/>
    </config>
    <entry key="layoutJSON" type="xstring" value=""/>
    <entry key="configurationLayoutJSON" type="xstring" value="{}"/>
    <entry key="hideInWizard" type="xboolean" value="false"/>
    <entry key="customCSS" type="xstring" value=""/>
</config>
